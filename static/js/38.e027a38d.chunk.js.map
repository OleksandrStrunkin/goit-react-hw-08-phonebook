{"version":3,"file":"static/js/38.e027a38d.chunk.js","mappings":"yMACA,EAAuB,0B,oBCAVA,EAAsB,SAAC,GAA+B,IAAD,IAA5BC,SAAAA,OAA4B,MAAjB,GAAiB,EACxDC,EADwD,EAAbC,OACjBC,cAKhC,OAJeH,EAASI,MAAMF,QAAO,YAEnC,OAFiD,EAAXG,KACVF,cACNG,SAASL,EAChC,GAEF,E,4BCIY,SAASM,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOH,EAAP,KAAaI,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACMX,GAAWY,EAAAA,EAAAA,IAAYb,GAGvBc,GAAWC,EAAAA,EAAAA,MA8BjB,OACE,kBAAMC,SAjBa,SAAAC,GACnBA,EAAEC,iBAEqBjB,EAASkB,MAC9B,SAAAC,GAAO,OAAIA,EAAQd,KAAKF,gBAAkBE,EAAKF,aAAxC,IAGPiB,MAAM,kBAAD,OAAmBf,EAAnB,6BAIPQ,GAASQ,EAAAA,EAAAA,IAAiB,CAAEhB,KAAAA,EAAMK,OAAAA,KAElCD,EAAQ,IACRE,EAAU,IACX,EAE+BW,UAAWC,EAAzC,WACE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,sBACNxB,KAAK,OACLyB,aAAa,OACbC,WAAS,EACTC,MAAO3B,EACP4B,SAxCa,SAAAjB,GACjBP,EAAQO,EAAEkB,cAAcF,MACzB,EAuCKG,WAAY,CAAEC,UAAW,OAE3B,SAACZ,EAAA,EAAD,CACJC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,SACHC,MAAM,kFACNxB,KAAK,SACLgC,KAAK,OACLP,aAAa,SACbE,MAAOtB,EACPuB,SAjDqB,SAAAK,IAEQ,KAAvBA,EAAMC,OAAOP,OADH,YACyBQ,KAAKF,EAAMC,OAAOP,SACvDrB,EAAU2B,EAAMJ,cAAcF,MAGjC,EA4CDG,WAAY,CAAEC,UAAW,OAErB,SAACK,EAAA,EAAD,CAAQJ,KAAK,SAASK,QAAQ,YAA9B,gEAKL,CChFD,MAA8B,iCAA9B,EAAyE,6BAAzE,EAAoH,iCAApH,EAAoK,kCAApK,EAAqN,kCCiCrN,EA1BoB,WAChB,IAAM7B,GAAWC,EAAAA,EAAAA,MACXd,GAAWY,EAAAA,EAAAA,IAAYb,IAG7B4C,EAAAA,EAAAA,YAAU,WACN9B,GAAS+B,EAAAA,EAAAA,MAEZ,GAAE,CAAC/B,IAKH,OACI,eAAIS,UAAWC,EAAf,SACKvB,EAAS6C,KAAI,SAAC1B,GACX,OACQ,gBAAIG,UAAWC,EAAf,WAAgD,iBAAMD,UAAWC,EAAjB,SAAsCJ,EAAQd,QAAY,iBAAMiB,UAAWC,EAAjB,SAAuCJ,EAAQT,UACtJ,mBAAQoC,QAAS,kBARjBlB,EAQuCT,EAAQS,QAPrEf,GAASkC,EAAAA,EAAAA,IAAoBnB,IADP,IAAAA,CAQiB,EAAmCN,UAAWC,EAA/D,gEADiCJ,EAAQS,GAIvD,KAGb,E,UCDD,EAxBe,WACX,IAQQf,GAAWC,EAAAA,EAAAA,MAIlB,OACC,SAACU,EAAA,EAAD,CACQC,OAAO,SACPG,GAAG,kBACHC,MAAM,eACNQ,KAAK,SACLJ,SAda,SAAAK,GAJH,IAAAU,IAKJV,EAAMC,OAAOP,MAJzBnB,GAASoC,EAAAA,EAAAA,GAAUD,GAKpB,GAeN,EC5BD,EAAsB,yBAAtB,EAA2D,+BCkB3D,MAZA,WACI,OACI,iBAAK1B,UAAWC,EAAhB,WACE,SAAChB,EAAD,KACD,iBAAKe,UAAWC,EAAhB,WACG,SAAC,EAAD,KACA,SAAC,EAAD,SAIX,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactLIst.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactPage.module.css?d4ca","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\"};","export const getAllContacts = ({contacts}) => contacts.items;\nexport const getFilteredContacts = ({ contacts = [], filter }) => {\n    const normalizedFilter = filter.toLowerCase();\n    const result = contacts.items.filter(({ name }) => {\n      const normalizedName = name.toLowerCase();\n      return normalizedName.includes(normalizedFilter);\n    });\n    return result;\n  };","import { useState } from 'react';\nimport styled from './ContactForm.module.css';\nimport { fetchAddContacts } from 'redux/contacts/contacts-operation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilteredContacts,} from 'redux/contacts/contacts-selectors';\n\n\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\n\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getFilteredContacts);\n\n\n  const dispatch = useDispatch();\n\n  const handleName = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleNumber = event => {\n    const regex = /^[0-9+]+$/;\n    if (event.target.value === '' || regex.test(event.target.value)) {\n      setNumber(event.currentTarget.value);\n    }\n    \n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isContactExist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isContactExist) {\n      alert(`User with name ${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(fetchAddContacts({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form onSubmit={handleSubmit} className={styled.form}>\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"name\"\n        label=\"Ім'я\"\n        name=\"name\"\n        autoComplete=\"name\"\n        autoFocus\n        value={name}\n        onChange={handleName}\n        inputProps={{ maxLength: 15}}\n      />\n      <TextField\n  margin=\"normal\"\n  required\n  fullWidth\n  id=\"number\"\n  label=\"Номер телефону\"\n  name=\"number\"\n  type=\"text\"\n  autoComplete=\"number\"\n  value={number}\n  onChange={handleNumber}\n  inputProps={{ maxLength: 10 }}\n/>\n      <Button type=\"submit\" variant=\"contained\">\n        Зберегти\n      </Button>\n    </form>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contact\":\"ContactList_contact__0STHS\",\"contactName\":\"ContactList_contactName__wLcl6\",\"contactPhone\":\"ContactList_contactPhone__b7MFx\",\"deleteButton\":\"ContactList_deleteButton__3hT3n\"};","import styled from './ContactList.module.css'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\n\nimport { getFilteredContacts} from 'redux/contacts/contacts-selectors';\nimport { fetchContacts, fetchDeleteContacts } from 'redux/contacts/contacts-operation';\n\nconst ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getFilteredContacts);\n    \n\n    useEffect(() => {\n        dispatch(fetchContacts())\n        \n    }, [dispatch])\n    \n    const onDeleteContact = id => {\n      dispatch(fetchDeleteContacts(id));\n    };\n     return (\n         <ul className={styled.contactList}>\n             {contacts.map((contact) => {\n                 return (  \n                         <li className={styled.contact} key={contact.id}><span className={styled.contactName}>{contact.name}</span><span className={styled.contactPhone}>{contact.number}</span>\n                            <button onClick={() => onDeleteContact(contact.id)} className={styled.deleteButton}>Видалити</button>\n                         </li>\n                 )\n             } )}\n            </ul>\n     )\n}\n\nexport default ContactList\n","\nimport TextField from '@mui/material/TextField';\n\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\n\n\nconst Filter = () => {\n    const onSetFilter = payload => {\n        dispatch(setFilter(payload));\n      };\n    \n      const updateFilter = event => {\n        onSetFilter(event.target.value);\n      };\n    \n      const dispatch = useDispatch();\n    \n\n\n     return (\n      <TextField\n              margin=\"normal\"\n              id=\"outlined-search\" \n              label=\"Search field\" \n              type=\"search\"\n              onChange={updateFilter}\n            />\n     )\n}\n\nexport default Filter\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"ContactPage_box__Z4g6h\",\"boxFilter\":\"ContactPage_boxFilter__uHD2O\"};","\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactLIst';\nimport Filter from 'components/Filter/Filter';\n\nimport styled from './ContactPage.module.css';\n\nfunction ContactsPage () {\n    return (\n        <div className={styled.box}>\n          <ContactForm/>\n         <div className={styled.boxFilter}>\n            <Filter/>\n            <ContactList/>\n         </div>\n        </div>\n      );\n};\n\nexport default ContactsPage;"],"names":["getFilteredContacts","contacts","normalizedFilter","filter","toLowerCase","items","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","find","contact","alert","fetchAddContacts","className","styled","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","value","onChange","currentTarget","inputProps","maxLength","type","event","target","test","Button","variant","useEffect","fetchContacts","map","onClick","fetchDeleteContacts","payload","setFilter"],"sourceRoot":""}