{"version":3,"file":"static/js/167.e933b2e5.chunk.js","mappings":"yMACA,EAAuB,0BAAvB,EAA0D,4BAA1D,EAA6F,0BAA7F,EAAgI,4B,kBCAnHA,EAAsB,SAAC,GAA+B,IAAD,IAA5BC,SAAAA,OAA4B,MAAjB,GAAiB,EACxDC,EADwD,EAAbC,OACjBC,cAKhC,OAJeH,EAASI,MAAMF,QAAO,YAEnC,OAFiD,EAAXG,KACVF,cACNG,SAASL,EAChC,GAEF,E,SCFY,SAASM,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOH,EAAP,KAAaI,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACMX,GAAWY,EAAAA,EAAAA,IAAYb,GAGvBc,GAAWC,EAAAA,EAAAA,MA0BjB,OACE,kBAAMC,SAjBa,SAAAC,GACnBA,EAAEC,iBAEqBjB,EAASkB,MAC9B,SAAAC,GAAO,OAAIA,EAAQd,KAAKF,gBAAkBE,EAAKF,aAAxC,IAGPiB,MAAM,kBAAD,OAAmBf,EAAnB,6BAIPQ,GAASQ,EAAAA,EAAAA,IAAiB,CAAEhB,KAAAA,EAAMK,OAAAA,KAElCD,EAAQ,IACRE,EAAU,IACX,EAE+BW,UAAWC,EAAzC,WACE,mBAAOD,UAAWC,EAAlB,iCAEE,kBACEC,KAAK,OACLnB,KAAK,OACLoB,MAAOpB,EACPqB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAnCW,SAAAb,GACjBP,EAAQO,EAAEc,cAAcL,MACzB,QAoCG,mBAAOH,UAAWC,EAAlB,4CAEE,kBACEC,KAAK,MACLnB,KAAK,SACLoB,MAAOf,EACPgB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SA3Ca,SAAAb,GACnBL,EAAUK,EAAEc,cAAcL,MAC3B,QA4CG,mBAAQD,KAAK,SAASF,UAAWC,EAAjC,gEAKL,CCpED,MAAuB,0BAAvB,EAA4D,8BCiC5D,EA1BoB,WAChB,IAAMV,GAAWC,EAAAA,EAAAA,MACXd,GAAWY,EAAAA,EAAAA,IAAYb,IAG7BgC,EAAAA,EAAAA,YAAU,WACNlB,GAASmB,EAAAA,EAAAA,MAEZ,GAAE,CAACnB,IAKH,OACI,eAAIS,UAAWC,EAAf,SACKvB,EAASiC,KAAI,SAACd,GACX,OACQ,gBAAIG,UAAWC,EAAf,UAAkDJ,EAAQd,MAAK,uBAAIc,EAAQT,UACxE,mBAAQwB,QAAS,kBARjBC,EAQuChB,EAAQgB,QAPrEtB,GAASuB,EAAAA,EAAAA,IAAoBD,IADP,IAAAA,CAQiB,EAAjB,gEADkChB,EAAQgB,GAIxD,KAGb,EC/BD,EAAyB,uB,SCDZE,EAAY,SAAC,GAAD,SAAEnC,MAAF,EC4BzB,EArBe,WACX,IAQQW,GAAWC,EAAAA,EAAAA,MAEXZ,GAASU,EAAAA,EAAAA,IAAYyB,GAE5B,OACI,mBAAOf,UAAWC,EAAlB,4CAEG,kBAAOC,KAAK,OAAOC,MAAOvB,EAAQ2B,SAXnB,SAAAS,GAJH,IAAAC,IAKJD,EAAME,OAAOf,MAJzBZ,GAAS4B,EAAAA,EAAAA,GAAUF,GAKpB,MAYN,ECTD,MAVA,WACI,OACI,iCACE,SAAChC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD,MAGT,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactLIst.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/filter/filter-selectors.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"button\":\"ContactForm_button__eSwX9\",\"name\":\"ContactForm_name__ZqciK\",\"number\":\"ContactForm_number__RyoZN\"};","export const getAllContacts = ({contacts}) => contacts.items;\nexport const getFilteredContacts = ({ contacts = [], filter }) => {\n    const normalizedFilter = filter.toLowerCase();\n    const result = contacts.items.filter(({ name }) => {\n      const normalizedName = name.toLowerCase();\n      return normalizedName.includes(normalizedFilter);\n    });\n    return result;\n  };","import { useState } from 'react';\nimport styled from './ContactForm.module.css';\nimport { fetchAddContacts } from 'redux/contacts/contacts-operation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilteredContacts,} from 'redux/contacts/contacts-selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getFilteredContacts);\n\n\n  const dispatch = useDispatch();\n\n  const handleName = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleNumber = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isContactExist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isContactExist) {\n      alert(`User with name ${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(fetchAddContacts({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form onSubmit={handleSubmit} className={styled.form}>\n      <label className={styled.name}>\n        Ім'я\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleName}\n        />\n      </label>\n      <label className={styled.number}>\n        Номер\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleNumber}\n        />\n      </label>\n      <button type=\"submit\" className={styled.button}>\n        Зберегти\n      </button>\n    </form>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"listItem\":\"ContactList_listItem__SptUx\"};","import styled from './ContactList.module.css'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\n\nimport { getFilteredContacts} from 'redux/contacts/contacts-selectors';\nimport { fetchContacts, fetchDeleteContacts } from 'redux/contacts/contacts-operation';\n\nconst ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getFilteredContacts);\n    \n\n    useEffect(() => {\n        dispatch(fetchContacts())\n        \n    }, [dispatch])\n    \n    const onDeleteContact = id => {\n      dispatch(fetchDeleteContacts(id));\n    };\n     return (\n         <ul className={styled.list}>\n             {contacts.map((contact) => {\n                 return (  \n                         <li className={styled.listItem} key={contact.id}>{contact.name}<p>{contact.number}</p>\n                            <button onClick={() => onDeleteContact(contact.id)}>Видалити</button>\n                         </li>\n                 )\n             } )}\n            </ul>\n     )\n}\n\nexport default ContactList\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","export const getFilter = ({filter}) => filter;","\nimport styled from './Filter.module.css'\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nconst Filter = () => {\n    const onSetFilter = payload => {\n        dispatch(setFilter(payload));\n      };\n    \n      const updateFilter = event => {\n        onSetFilter(event.target.value);\n      };\n    \n      const dispatch = useDispatch();\n    \n      const filter = useSelector(getFilter);\n\n     return (\n         <label className={styled.filter}>\n            Пошук\n            <input type=\"text\" value={filter} onChange={updateFilter} />\n          </label>\n     )\n}\n\nexport default Filter\n","\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactLIst';\nimport Filter from 'components/Filter/Filter';\n\n\n\nfunction ContactsPage () {\n    return (\n        <>\n          <ContactForm/>\n          <Filter/>\n          <ContactList/>\n        </>\n      );\n};\n\nexport default ContactsPage;"],"names":["getFilteredContacts","contacts","normalizedFilter","filter","toLowerCase","items","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","find","contact","alert","fetchAddContacts","className","styled","type","value","pattern","title","required","onChange","currentTarget","useEffect","fetchContacts","map","onClick","id","fetchDeleteContacts","getFilter","event","payload","target","setFilter"],"sourceRoot":""}